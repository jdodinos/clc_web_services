<?php

/**
 * @file
 * Contains clc_web_services.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function clc_web_services_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the clc_web_services module.
    case 'help.page.clc_web_services':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Manage web services functionality') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function clc_web_services_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // This functionality working just anonymous users.
  if (\Drupal::currentUser()->isAnonymous()) {
    $availables_forms = [
      'webform_submission_contactanos_y_pqrs_add_form',
      'webform_submission_recoleccion_add_form',
    ];

    if (in_array($form_id, $availables_forms)) {
      $form['#validate'][] = 'clc_web_services_form_validate';
      $form['#attached']['library'][] = 'clc_web_services/habeas_data';
    }
  }
}

function clc_web_services_form_validate(&$form, FormStateInterface $form_state) {
  $triggering_element = $form_state->getTriggeringElement();
  $form_errors = $form_state->getErrors();
  if ($triggering_element['#type'] == 'submit' && $triggering_element['#name'] == 'op' && empty($form_errors)) {
    // Values submitted.
    $values = $form_state->getValues();
    // Form info.
    $form_id = $values['form_id'];
    clc_web_services_habeas_data($form_id, $values, $form_state);

    // Validate errors.
    $form_errors = $form_state->getErrors();
    if (empty($form_errors)) {
      clc_web_services_voz_cliente_kalley($form_id, $values, $form_state);
      clc_web_services_crm_creacaso($form_id, $values, $form_state);
    }
  }
}

/**
 * function clc_web_services_crm_creacaso.
 * This function consumes the method crea_caso in web service of SIGA.
 *
 * @param string $form_id.
 *   The form id.
 * @param array $values.
 *   The values to send.
 */
function clc_web_services_crm_creacaso($form_id, $values, FormStateInterface $form_state) {
  $WsCrm = \Drupal::service('clc_web_services.crm_service');

  if ($WsCrm->validate) {
    // Validate form's data.
    $WsCrm->validateDataForm($form_id, $values);

    if ($WsCrm->validate) {
      $WsCrm->sendDataToWs();

      if ($WsCrm->error) {
        $form_state->setErrorByName('name', 'SOMETHING WENT WRONG! - Please try again.');
        $form_state->setRebuild();
      }
    }
    else {
      // Show errors.
      foreach ($WsCrm->message as $key => $value) {
        $form_state->setErrorByName($key, $value);
      }

      $form_state->setRebuild();
    }

  }
}

/**
 * function clc_web_services_habeas_data.
 * This function consumes the method of Habeas Data service.
 *
 * @param string $form_id.
 *   The form id.
 * @param array $values.
 *   The values to send.
 */
function clc_web_services_habeas_data($form_id, $values, FormStateInterface $form_state) {
  $WsHabeasData = \Drupal::service('clc_web_services.habeas_data_service');

  if ($WsHabeasData->validate) {
    // Validate form's data.
    $WsHabeasData->validateDataForm($form_id, $values);

    if ($WsHabeasData->validate) {
      $WsHabeasData->sendDataToWs();

      if ($WsHabeasData->error) {
        $form_state->setErrorByName('name', 'SOMETHING WENT WRONG! - Please try again.');
        $form_state->setRebuild();
      }
    }
    else {
      // Show errors.
      foreach ($WsHabeasData->message as $key => $value) {
        $form_state->setErrorByName($key, $value);
      }

      $form_state->setRebuild();
    }

  }
}

/**
 * function clc_web_services_voz_cliente_kalley.
 * This function consumes the method of Voz Cliente Kalley service.
 *
 * @param string $form_id.
 *   The form id.
 * @param array $values.
 *   The values to send.
 */
function clc_web_services_voz_cliente_kalley($form_id, $values, FormStateInterface $form_state) {
  $WsVozClienteKalley = \Drupal::service('clc_web_services.voz_cliente_kalley_service');

  if ($WsVozClienteKalley->validate) {
    // Validate form's data.
    $WsVozClienteKalley->validateDataForm($form_id, $values);

    if ($WsVozClienteKalley->validate) {
      $WsVozClienteKalley->sendDataToWs();

      if ($WsVozClienteKalley->error) {
        $form_state->setErrorByName('name', 'SOMETHING WENT WRONG! - Please try again.');
        $form_state->setRebuild();
      }
    }
    else {
      // Show errors.
      foreach ($WsVozClienteKalley->message as $key => $value) {
        $form_state->setErrorByName($key, $value);
      }

      $form_state->setRebuild();
    }

  }
}
